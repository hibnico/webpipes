<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2014 WebPipes contributors
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project name="webpipes"
	xmlns:ivy="antlib:org.apache.ivy.ant"
	xmlns:ac="antlib:net.sf.antcontrib"
	xmlns:openpgp="antlib:org.apache.commons.openpgp.ant">

    <property name="target.dir" location="${basedir}/target" />

    <property name="ivy.version" value="2.4.0-rc1" />
    <property name="bouncycastle.version" value="1.50" />
    <property name="commons-openpgp.version" value="1.0-20080726.092946-4" />

    <property file="${basedir}/build.properties" />

    <target name="clean" description="Clean build artifacts">
        <delete dir="${target.dir}" />
    </target>

    <target name="-check-ivy-jars" unless="ivy-jars.exist">
        <condition property="ivy-jars.exist">
            <and>
                <available file="${user.home}/.ivy2/jars/ivy-${ivy.version}.jar" />
                <available file="${user.home}/.ivy2/jars/bcprov-jdk15on-${bouncycastle.version}.jar" />
                <available file="${user.home}/.ivy2/jars/bcpg-jdk15on-${bouncycastle.version}.jar" />
                <available file="${user.home}/.ivy2/jars/commons-openpgp-${commons-openpgp.version}.jar" />
            </and>
        </condition>
    </target>

    <target name="-download-ivy-jars" depends="-check-ivy-jars" unless="ivy-jars.exist">
        <mkdir dir="${user.home}/.ivy2/jars" />
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="${user.home}/.ivy2/jars/ivy-${ivy.version}.jar" usetimestamp="true" />
        <get src="http://repo1.maven.org/maven2/org/bouncycastle/bcprov-jdk15on/${bouncycastle.version}/bcprov-jdk15on-${bouncycastle.version}.jar" dest="${user.home}/.ivy2/jars/bcprov-jdk15on-${bouncycastle.version}.jar" usetimestamp="true" />
        <get src="http://repo1.maven.org/maven2/org/bouncycastle/bcpg-jdk15on/${bouncycastle.version}/bcpg-jdk15on-${bouncycastle.version}.jar" dest="${user.home}/.ivy2/jars/bcpg-jdk15on-${bouncycastle.version}.jar" usetimestamp="true" />
        <get src="http://people.apache.org/repo/m2-snapshot-repository/org/apache/commons/commons-openpgp/1.0-SNAPSHOT/commons-openpgp-${commons-openpgp.version}.jar" dest="${user.home}/.ivy2/jars/commons-openpgp-${commons-openpgp.version}.jar" usetimestamp="true" />
    </target>

    <target name="-init-props">
        <property name="webpipes.version" value="${webpipes.version.base}-SNAPSHOT" />
        <property name="publish.resolver" value="ossrh-snapshots" />
    </target>

    <target name="-init-props-release">
        <property name="webpipes.version" value="${webpipes.version.base}" />
        <property name="publish.resolver" value="ossrh-staging" />
    </target>

    <target name="-init" depends="-init-props,-download-ivy-jars" unless="build.initiated">
        <!-- load Ivy tasks-->
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant">
            <classpath>
                <pathelement location="${user.home}/.ivy2/jars/ivy-${ivy.version}.jar" />
                <pathelement location="${user.home}/.ivy2/jars/bcprov-jdk15on-${bouncycastle.version}.jar" />
                <pathelement location="${user.home}/.ivy2/jars/bcpg-jdk15on-${bouncycastle.version}.jar" />
                <pathelement location="${user.home}/.ivy2/jars/commons-openpgp-${commons-openpgp.version}.jar" />
            </classpath>
        </taskdef>

        <!-- load ant-contrib -->
        <ivy:resolve keep="true" resolveId="antcontrib.resolve" log="download-only">
            <dependency org="ant-contrib" name="ant-contrib" rev="1.0b3" transitive="false" />
        </ivy:resolve>
        <ivy:cachepath resolveId="antcontrib.resolve" pathid="antcontrib.classpath" type="jar,bundle" />
        <taskdef resource="net/sf/antcontrib/antcontrib.properties" uri="antlib:net.sf.antcontrib" classpathref="antcontrib.classpath" />

        <property name="build.initiated" value="true" />
    </target>

    <target name="ivy:configure" depends="-init" unless="ivy.configured">
        <ivy:configure file="${basedir}/ivysettings.xml" />
        <property name="ivy.configured" value="true" />
    </target>

    <target name="ivy:resolve" depends="-init,ivy:configure" unless="ivy.resolved">
        <ivy:resolve file="${basedir}/ivy-fixed.xml" conf="compile,runtime,test" type="jar,bundle" />

        <!-- to have the proper version in the ivy, and a cached resolve so the publish can work -->
        <ivy:deliver deliverpattern="${basedir}/target/ivy.xml" pubrevision="${webpipes.version}" />
        <ivy:resolve file="${basedir}/target/ivy.xml" conf="compile,runtime,test" type="jar,bundle" log="quiet" />

        <ivy:cachepath pathid="compile.classpath" conf="compile" type="jar,bundle" />
        <ivy:cachepath pathid="runtime.classpath" conf="runtime" type="jar,bundle" />
        <ivy:cachepath pathid="test.classpath" conf="test" type="jar,bundle" />
        <ivy:deliver deliverpattern="${basedir}/target/ivy.xml" />
        
        <property name="ivy.resolved" value="true" />
    </target>

    <target name="update-deps" depends="-init,ivy:configure" description="Update dependencies (to be called on ivy-manifest.xml or MANIFEST.MF change)">
        <ivy:resolve file="${basedir}/ivy.xml" conf="*" type="jar" resolveId="update-deps" />
        <ivy:fixdeps tofile="${basedir}/ivy-fixed.xml" resolveId="update-deps" />
    </target>

    <target name="compile" depends="ivy:resolve" description="Compile the sources">
        <mkdir dir="${target.dir}/classes/" />
        <javac srcdir="${basedir}/src/main/java" destdir="${target.dir}/classes" debug="on" includeantruntime="false" source="1.7" target="1.7" classpathref="compile.classpath" />
        <copy todir="${target.dir}/classes">
            <fileset dir="${basedir}/src/main/java">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build the jar">
        <jar destfile="${target.dir}/dist/webpipes.jar" basedir="${target.dir}/classes" />
    </target>

    <target name="compile-tests" depends="compile">
        <mkdir dir="${target.dir}/test-classes/" />
        <javac srcdir="${basedir}/src/test/java/" destdir="${target.dir}/test-classes" debug="on" includeantruntime="false" source="1.7" target="1.7">
            <classpath>
                <path location="${target.dir}/classes/" />
                <path refid="test.classpath" />
            </classpath>
        </javac>
        <copy todir="${target.dir}/test-classes">
            <fileset dir="${basedir}/src/test/java">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="test" depends="compile-tests" description="Run the unit tests">
        <mkdir dir="${target.dir}/test-reports" />
        <junit fork="true" haltonerror="true" haltonfailure="true" failureproperty="junit.failed">
            <jvmarg value="-XX:-UseSplitVerifier"/>
            <classpath>
                <pathelement location="${target.dir}/test-classes"/>
                <pathelement location="${target.dir}/classes"/>
                <path refid="test.classpath"/> 
            </classpath>
            <formatter type="plain" usefile="no" />
            <formatter type="xml"/>
            <batchtest todir="${target.dir}/test-reports">
                <fileset dir="${basedir}/src/test/java">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*Test.java"/>
                    <exclude name="**/*$*"/>
                </fileset>
            </batchtest>
        </junit>    
    </target>

    <target name="jar-sources">
        <jar destfile="${target.dir}/dist/webpipes-sources.jar" basedir="${basedir}/src/main/java" />
    </target>

    <target name="javadoc" depends="ivy:resolve">
        <javadoc use="true" private="true" destdir="${target.dir}/javadoc" 
                 author="false" version="true"
                 sourcepath="${basedir}/src/main/java"
                 classpathref="compile.classpath"
                 windowtitle="Webpipes ${webpipes.version}">
            <doctitle>Webpipes ${webpipes.version}</doctitle>
        </javadoc>
    </target>

    <target name="jar-javadoc" depends="javadoc">
        <jar destfile="${target.dir}/dist/webpipes-javadoc.jar" basedir="${target.dir}/javadoc" />
    </target>

    <target name="create-pom" depends="-init">
        <property name="ivy.pom.version" value="${webpipes.version}" />
        <ivy:makepom ivyfile="${basedir}/ivy.xml" pomfile="${target.dir}/dist/webpipes.pom" templatefile="${basedir}/src/pom.template" />
    </target>

    <target name="build" depends="jar,jar-sources,jar-javadoc,create-pom" description="Build all artifacts"/>

    <target name="-publish" depends="build">
        <input addproperty="ossrh.passwd" message="OSSRH password:">
        	<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
        </input>
        <input addproperty="pgp.password" message="PGP password:">
        	<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
        </input>

        <!-- reload the settings with the proper passwords -->
        <ivy:settings id="ivy.instance" file="ivysettings.xml" />

        <ivy:publish organisation="org.hibnet"
                     module="webpipes"
                     revision="${webpipes.version}"
                     srcivypattern="${basedir}/ivy.xml"
                     artifactspattern="${basedir}/target/dist/[artifact](-[classifier]).[ext]"
                     publishivy="false"
                     conf="default"
                     resolver="${publish.resolver}"
                     overwrite="true">
            <artifact name="webpipes" ext="pom" type="ivy" />
            <artifact name="webpipes" ext="jar" type="jar" />
            <artifact name="webpipes" ext="jar" type="sources" classifier="sources" />
            <artifact name="webpipes" ext="jar" type="javadoc" classifier="javadoc" />
        </ivy:publish>
	</target>

    <target name="publish-snapshot" depends="-publish">
	</target>

    <target name="-pre-release" depends="-init-props-release">
        <!-- tag first, so this will ensure that the version is unique -->
        <exec executable="git" failonerror="true">
            <arg line="tag ${webpipes.version}" />
        </exec>
    </target>

    <target name="bump-version" depends="-init">
        <!-- compute the next patch version -->
        <ac:propertyregex property="webpipes.version.major" input="${webpipes.version}" regexp="([0-9]*).*" select="\1" />
        <ac:propertyregex property="webpipes.version.minor" input="${webpipes.version}" regexp="[0-9]*\.([0-9]*).*" select="\1" />
        <ac:propertyregex property="webpipes.version.patch" input="${webpipes.version}" regexp="[0-9]*\.[0-9]*\.([0-9]*).*" select="\1" />
        <ac:math result="webpipes.version.patch.next" operand1="${webpipes.version.patch}" operation="+" operand2="1" datatype="int" />
        <property name="webpipes.version.next.patch" value="${webpipes.version.major}.${webpipes.version.minor}.${webpipes.version.patch.next}" />
        <!-- edit the build.properties -->
        <loadresource property="build.properties.content.new">
            <file file="${basedir}/build.properties" />
            <filterchain>
                <tokenfilter>
                    <replaceregex pattern="^webpipes\.version\.base=.*$" replace="webpipes.version.base=${webpipes.version.next.patch}" flags="gi" />
                </tokenfilter>
            </filterchain>
        </loadresource>
        <echo message="${build.properties.content.new}" file="${basedir}/build.properties" />
        <!-- commit -->
        <exec executable="git" failonerror="true">
            <arg line="add build.properties" />
        </exec>
        <exec executable="git" failonerror="true">
            <arg line="commit -m 'v++'" />
        </exec>
    </target>

    <target name="release" depends="-pre-release,-publish,bump-version">
    </target>

</project>
